services:
  service_a:
    build:
      context: .
      dockerfile: service_a/Dockerfile
    environment:
      DB_URL: $SERVICE_A_DB_URL
      RABBIT_USER: $RABBIT_USER
      RABBIT_PASS: $RABBIT_PASS      
      CHECK_OUTBOX_EVENTS_EVERY: $CHECK_OUTBOX_EVENTS_EVERY
    expose:
      - "8080"
    volumes:
      - ./service_a/web_app:/service_a/web_app
      - ./service_a/tests:/service_a/tests
      - ./service_a/migrations:/service_a/migrations
    depends_on:
      - service_a_postgres
      - service_a_worker
      - rabbitmq
    networks:
      - service_a
    
  service_a_postgres:
    image: postgres
    environment:
      POSTGRES_USER: $SERVICE_A_DB_USER
      POSTGRES_PASSWORD: $SERVICE_A_DB_PASSWORD
      POSTGRES_DB: $SERVICE_A_DB_NAME
    volumes:
      - postgres_data_a:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - service_a

  service_a_worker:
    build:
      context: .
      dockerfile: service_a/Dockerfile
    command: ["celery", "-A", "web_app.main:celery_app", "worker", "-Q", "service_a_tasks", "--loglevel=info"]
    environment:
      DB_URL: $SERVICE_A_DB_URL
      RABBIT_USER: $RABBIT_USER
      RABBIT_PASS: $RABBIT_PASS
      CHECK_OUTBOX_EVENTS_EVERY: $CHECK_OUTBOX_EVENTS_EVERY
    volumes:
      - ./service_a/web_app:/service_a/web_app
    depends_on:
      - service_a_postgres
      - rabbitmq
      - service_b
    networks:
      - service_a

  service_a_celery_beat:
    build:
      context: .
      dockerfile: service_a/Dockerfile
    command: ["celery", "-A", "web_app.main:celery_app", "beat", "--loglevel=info"]
    environment:
      DB_URL: $SERVICE_A_DB_URL
      RABBIT_USER: $RABBIT_USER
      RABBIT_PASS: $RABBIT_PASS
      CHECK_OUTBOX_EVENTS_EVERY: $CHECK_OUTBOX_EVENTS_EVERY
    volumes:
      - ./service_a/web_app:/service_a/web_app
    depends_on:
      - service_a_postgres
      - rabbitmq
      - service_b
    networks:
      - service_a

  service_b:
    build:
      context: .
      dockerfile: service_b/Dockerfile
    environment:
      DB_URL: $SERVICE_B_DB_URL
      RABBIT_USER: $RABBIT_USER
      RABBIT_PASS: $RABBIT_PASS
    expose:
      - "8081"
    volumes:
      - ./service_b/web_app:/service_b/web_app
      - ./service_b/tests:/service_b/tests
      - ./service_b/migrations:/service_b/migrations
    depends_on:
      - service_b_postgres
      - rabbitmq
    networks:
      - service_b

  service_b_postgres:
    image: postgres
    environment:
      POSTGRES_USER: $SERVICE_B_DB_USER
      POSTGRES_PASSWORD: $SERVICE_B_DB_PASSWORD
      POSTGRES_DB: $SERVICE_B_DB_NAME
    volumes:
      - postgres_data_b:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - service_b

  rabbitmq:
    image: rabbitmq:3-management
    ports:
     - "5672:5672"
     - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: $RABBIT_USER
      RABBITMQ_DEFAULT_PASS: $RABBIT_PASS
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - service_a
      - service_b

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - 80:80
    depends_on:
      - service_a
      - service_b
    networks:
      - service_a
      - service_b
    volumes:
      - ./nginx/flask_micro.conf:/etc/nginx/conf.d/flask_micro.conf

volumes:
  postgres_data_a:
  postgres_data_b:
  rabbitmq_data:
  redis_data:

networks:
  service_a:
    driver: bridge
  service_b:
    driver: bridge